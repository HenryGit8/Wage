<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wage.biz.mybatis.HisLoginMapper" >
  <!--<cache eviction="LRU" type="com.wage.redis.RedisCache" />-->
  <cache type="org.mybatis.caches.ignite.IgniteCacheAdapter" />
  <resultMap id="BaseResultMap" type="com.wage.model.HisLogin" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="EMP_ID" property="empId" jdbcType="DECIMAL" />
    <result column="LOGIN_TIME" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="PLACE" property="place" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMapExt" type="com.wage.model.ext.HisLoginExt" extends="BaseResultMap">
    <result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, EMP_ID, LOGIN_TIME, IP, PLACE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from HIS_LOGIN
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from HIS_LOGIN
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.wage.model.HisLogin" >
    insert into HIS_LOGIN (ID, EMP_ID, LOGIN_TIME,
      IP, PLACE)
    SELECT (case when MAX(ID) IS NULL then 0 else MAX(ID)+1 end), #{empId,jdbcType=DECIMAL},SYSDATE,
      #{ip,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}
    FROM HIS_LOGIN
  </insert>
  <insert id="insertSelective" parameterType="com.wage.model.HisLogin" >
    insert into HIS_LOGIN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="empId != null" >
        EMP_ID,
      </if>
      <if test="loginTime != null" >
        LOGIN_TIME,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="place != null" >
        PLACE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=DECIMAL},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wage.model.HisLogin" >
    update HIS_LOGIN
    <set >
      <if test="empId != null" >
        EMP_ID = #{empId,jdbcType=DECIMAL},
      </if>
      <if test="loginTime != null" >
        LOGIN_TIME = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        PLACE = #{place,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wage.model.HisLogin" >
    update HIS_LOGIN
    set EMP_ID = #{empId,jdbcType=DECIMAL},
      LOGIN_TIME = #{loginTime,jdbcType=TIMESTAMP},
      IP = #{ip,jdbcType=VARCHAR},
      PLACE = #{place,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="findAllLoginHis" resultMap="BaseResultMapExt">
    SELECT A.*,B.EMP_NAME
    FROM HIS_LOGIN A LEFT JOIN EMP_DIC_BASIC_INFO B ON A.EMP_ID = B.EMP_ID
    WHERE 1=1
    <if test="empName != null and empName != ''" >
      AND (B.EMP_NAME LIKE CONCAT(CONCAT('%',#{empName,jdbcType=VARCHAR}),'%')
      OR A.EMP_ID LIKE CONCAT(CONCAT('%',#{empName,jdbcType=VARCHAR}),'%'))
    </if>
    <if test="loginTimeStart != null and loginTimeEnd != null" >
      AND (A.LOGIN_TIME BETWEEN #{loginTimeStart,jdbcType=TIMESTAMP} AND #{loginTimeEnd,jdbcType=TIMESTAMP}
      OR A.LOGIN_TIME BETWEEN #{loginTimeEnd,jdbcType=TIMESTAMP} AND #{loginTimeStart,jdbcType=TIMESTAMP})
    </if>
    ORDER BY A.LOGIN_TIME DESC
  </select>
  <select id="findLoginHisByEmpId" resultMap="BaseResultMapExt">
    SELECT A.*,B.EMP_NAME
    FROM HIS_LOGIN A LEFT JOIN EMP_DIC_BASIC_INFO B ON A.EMP_ID = B.EMP_ID
    WHERE A.EMP_ID = #{empId,jdbcType=DECIMAL}
    ORDER BY A.LOGIN_TIME DESC
  </select>
  <select id="findLoginCount" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM HIS_LOGIN
    WHERE EMP_ID = #{empId,jdbcType=DECIMAL}
  </select>
</mapper>