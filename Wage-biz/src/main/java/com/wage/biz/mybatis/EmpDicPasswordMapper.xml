<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wage.biz.mybatis.EmpDicPasswordMapper" >
  <!-- 支持缓存配置 -->
  <!--<cache eviction="LRU" type="com.wage.redis.RedisCache" />-->
  <cache type="org.mybatis.caches.ignite.IgniteCacheAdapter" />
  <resultMap id="BaseResultMap" type="com.wage.model.EmpDicPassword" >
    <id column="EMP_ID" property="empId" jdbcType="DECIMAL" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="IS_ADMIN" property="isAdmin" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="BaseResultMapExt" type="com.wage.model.ext.EmpDicPasswordExt" extends="BaseResultMap">
    <result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    EMP_ID, PASSWORD, IS_ADMIN
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from EMP_DIC_PASSWORD
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from EMP_DIC_PASSWORD
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.wage.model.EmpDicPassword" >
    insert into EMP_DIC_PASSWORD (EMP_ID, PASSWORD, IS_ADMIN
      )
    values (#{empId,jdbcType=DECIMAL}, #{password,jdbcType=VARCHAR}, #{isAdmin,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wage.model.EmpDicPassword" >
    insert into EMP_DIC_PASSWORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="empId != null" >
        EMP_ID,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="isAdmin != null" >
        IS_ADMIN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="empId != null" >
        #{empId,jdbcType=DECIMAL},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wage.model.EmpDicPassword" >
    update EMP_DIC_PASSWORD
    <set >
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        IS_ADMIN = #{isAdmin,jdbcType=DECIMAL},
      </if>
    </set>
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wage.model.EmpDicPassword" >
    update EMP_DIC_PASSWORD
    set PASSWORD = #{password,jdbcType=VARCHAR},
      IS_ADMIN = #{isAdmin,jdbcType=DECIMAL}
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </update>
  <select id="selectLoginMan" resultMap="BaseResultMap">
    SELECT *
    FROM EMP_DIC_PASSWORD
    WHERE PASSWORD = #{password,jdbcType=VARCHAR}
    AND EMP_ID = #{empId,jdbcType=DECIMAL}
  </select>
  <select id="findAdmin" resultMap="BaseResultMapExt">
    SELECT A.EMP_ID,B.EMP_NAME
    FROM EMP_DIC_PASSWORD A LEFT JOIN EMP_DIC_BASIC_INFO B ON A.EMP_ID = B.EMP_ID
    WHERE A.IS_ADMIN = 1
  </select>
  <select id="findNotAdmin" resultMap="BaseResultMapExt">
    SELECT A.EMP_ID,B.EMP_NAME
    FROM EMP_DIC_PASSWORD A LEFT JOIN EMP_DIC_BASIC_INFO B ON A.EMP_ID = B.EMP_ID
    WHERE A.IS_ADMIN = 0
  </select>
  <select id="findIsRegister" resultMap="BaseResultMapExt">
    SELECT A.EMP_ID,B.EMP_NAME
    FROM EMP_DIC_PASSWORD A LEFT JOIN EMP_DIC_BASIC_INFO B ON A.EMP_ID = B.EMP_ID
    WHERE A.EMP_ID != #{empId,jdbcType=DECIMAL}
    <if test="empName != null and empName != ''" >
      AND (B.EMP_NAME LIKE CONCAT(CONCAT('%',#{empName,jdbcType=VARCHAR}),'%')
      OR A.EMP_ID LIKE CONCAT(CONCAT('%',#{empName,jdbcType=VARCHAR}),'%'))
    </if>
    ORDER BY A.EMP_ID
  </select>
</mapper>